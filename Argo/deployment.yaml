apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbot-deployment
  labels:
    app: django-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      containers:
        - name: chatbot-cont
          image: 331523302307.dkr.ecr.ap-south-1.amazonaws.com/chatbot:21
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
      imagePullSecrets:
        - name: ecr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: chatbot-service
spec:
  selector:
    app: django-app  
  ports:
    - protocol: TCP
      port: 80  
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chatbot-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/subnets: subnet-01db3b02f92f0f0a1, subnet-0c3c5ace6d4d6393b
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-2016-08
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:331523302307:certificate/8881e632-1212-467c-a628-438420ef2b21
spec:
  rules:
    - host: chatbot.poonamshinde.world
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chatbot-service
                port:
                  number: 80
  tls:
    - hosts:
        - chatbot.poonamshinde.world
      secretName: chatbot-tls-secret

